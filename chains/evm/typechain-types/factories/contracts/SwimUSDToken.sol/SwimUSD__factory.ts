/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SwimUSD,
  SwimUSDInterface,
} from "../../../contracts/SwimUSDToken.sol/SwimUSD";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506120e1806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d71461028b578063a9059cbb146102bb578063dd62ed3e146102eb578063f2fde38b1461031b57610100565b8063715018a61461023b5780638129fc1c146102455780638da5cb5b1461024f57806395d89b411461026d57610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806340c10f19146101ef57806370a082311461020b57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610337565b60405161011a91906113e1565b60405180910390f35b61013d6004803603810190610138919061149c565b6103c9565b60405161014a91906114f7565b60405180910390f35b61015b6103ec565b6040516101689190611521565b60405180910390f35b61018b6004803603810190610186919061153c565b6103f6565b60405161019891906114f7565b60405180910390f35b6101a9610425565b6040516101b691906115ab565b60405180910390f35b6101d960048036038101906101d4919061149c565b61042e565b6040516101e691906114f7565b60405180910390f35b6102096004803603810190610204919061149c565b610465565b005b610225600480360381019061022091906115c6565b6104ef565b6040516102329190611521565b60405180910390f35b610243610538565b005b61024d6105c0565b005b6102576106c8565b6040516102649190611602565b60405180910390f35b6102756106f2565b60405161028291906113e1565b60405180910390f35b6102a560048036038101906102a0919061149c565b610784565b6040516102b291906114f7565b60405180910390f35b6102d560048036038101906102d0919061149c565b6107fb565b6040516102e291906114f7565b60405180910390f35b6103056004803603810190610300919061161d565b61081e565b6040516103129190611521565b60405180910390f35b610335600480360381019061033091906115c6565b6108a5565b005b6060603680546103469061168c565b80601f01602080910402602001604051908101604052809291908181526020018280546103729061168c565b80156103bf5780601f10610394576101008083540402835291602001916103bf565b820191906000526020600020905b8154815290600101906020018083116103a257829003601f168201915b5050505050905090565b6000806103d461099c565b90506103e18185856109a4565b600191505092915050565b6000603554905090565b60008061040161099c565b905061040e858285610b6d565b610419858585610bf9565b60019150509392505050565b60006012905090565b60008061043961099c565b905061045a81858561044b858961081e565b61045591906116ec565b6109a4565b600191505092915050565b61046d61099c565b73ffffffffffffffffffffffffffffffffffffffff1661048b6106c8565b73ffffffffffffffffffffffffffffffffffffffff16146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061178e565b60405180910390fd5b6104eb8282610e7b565b5050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61054061099c565b73ffffffffffffffffffffffffffffffffffffffff1661055e6106c8565b73ffffffffffffffffffffffffffffffffffffffff16146105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab9061178e565b60405180910390fd5b6105be6000610fdb565b565b60006105cc60016110a1565b905080156105f0576001600060016101000a81548160ff0219169083151502179055505b6106646040518060400160405280600781526020017f5377696d555344000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f7355534400000000000000000000000000000000000000000000000000000000815250611191565b61066c6111ee565b80156106c55760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516106bc91906117f3565b60405180910390a15b50565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060603780546107019061168c565b80601f016020809104026020016040519081016040528092919081815260200182805461072d9061168c565b801561077a5780601f1061074f5761010080835404028352916020019161077a565b820191906000526020600020905b81548152906001019060200180831161075d57829003601f168201915b5050505050905090565b60008061078f61099c565b9050600061079d828661081e565b9050838110156107e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d990611880565b60405180910390fd5b6107ef82868684036109a4565b60019250505092915050565b60008061080661099c565b9050610813818585610bf9565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6108ad61099c565b73ffffffffffffffffffffffffffffffffffffffff166108cb6106c8565b73ffffffffffffffffffffffffffffffffffffffff1614610921576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109189061178e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098790611912565b60405180910390fd5b61099981610fdb565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0a906119a4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7990611a36565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b609190611521565b60405180910390a3505050565b6000610b79848461081e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bf35781811015610be5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdc90611aa2565b60405180910390fd5b610bf284848484036109a4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5f90611b34565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cce90611bc6565b60405180910390fd5b610ce2838383611247565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6090611c58565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dfe91906116ec565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e629190611521565b60405180910390a3610e7584848461124c565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee190611cc4565b60405180910390fd5b610ef660008383611247565b8060356000828254610f0891906116ec565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f5e91906116ec565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fc39190611521565b60405180910390a3610fd76000838361124c565b5050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060019054906101000a900460ff16156111185760018260ff161480156110d057506110ce30611251565b155b61110f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110690611d56565b60405180910390fd5b6000905061118c565b8160ff1660008054906101000a900460ff1660ff161061116d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116490611d56565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff166111e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d790611de8565b60405180910390fd5b6111ea8282611274565b5050565b600060019054906101000a900460ff1661123d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123490611de8565b60405180910390fd5b6112456112e7565b565b505050565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166112c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ba90611de8565b60405180910390fd5b81603690816112d29190611fd9565b5080603790816112e29190611fd9565b505050565b600060019054906101000a900460ff16611336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132d90611de8565b60405180910390fd5b61134661134161099c565b610fdb565b565b600081519050919050565b600082825260208201905092915050565b60005b83811015611382578082015181840152602081019050611367565b83811115611391576000848401525b50505050565b6000601f19601f8301169050919050565b60006113b382611348565b6113bd8185611353565b93506113cd818560208601611364565b6113d681611397565b840191505092915050565b600060208201905081810360008301526113fb81846113a8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061143382611408565b9050919050565b61144381611428565b811461144e57600080fd5b50565b6000813590506114608161143a565b92915050565b6000819050919050565b61147981611466565b811461148457600080fd5b50565b60008135905061149681611470565b92915050565b600080604083850312156114b3576114b2611403565b5b60006114c185828601611451565b92505060206114d285828601611487565b9150509250929050565b60008115159050919050565b6114f1816114dc565b82525050565b600060208201905061150c60008301846114e8565b92915050565b61151b81611466565b82525050565b60006020820190506115366000830184611512565b92915050565b60008060006060848603121561155557611554611403565b5b600061156386828701611451565b935050602061157486828701611451565b925050604061158586828701611487565b9150509250925092565b600060ff82169050919050565b6115a58161158f565b82525050565b60006020820190506115c0600083018461159c565b92915050565b6000602082840312156115dc576115db611403565b5b60006115ea84828501611451565b91505092915050565b6115fc81611428565b82525050565b600060208201905061161760008301846115f3565b92915050565b6000806040838503121561163457611633611403565b5b600061164285828601611451565b925050602061165385828601611451565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116a457607f821691505b6020821081036116b7576116b661165d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116f782611466565b915061170283611466565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611737576117366116bd565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611778602083611353565b915061178382611742565b602082019050919050565b600060208201905081810360008301526117a78161176b565b9050919050565b6000819050919050565b6000819050919050565b60006117dd6117d86117d3846117ae565b6117b8565b61158f565b9050919050565b6117ed816117c2565b82525050565b600060208201905061180860008301846117e4565b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061186a602583611353565b91506118758261180e565b604082019050919050565b600060208201905081810360008301526118998161185d565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118fc602683611353565b9150611907826118a0565b604082019050919050565b6000602082019050818103600083015261192b816118ef565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061198e602483611353565b915061199982611932565b604082019050919050565b600060208201905081810360008301526119bd81611981565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a20602283611353565b9150611a2b826119c4565b604082019050919050565b60006020820190508181036000830152611a4f81611a13565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611a8c601d83611353565b9150611a9782611a56565b602082019050919050565b60006020820190508181036000830152611abb81611a7f565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611b1e602583611353565b9150611b2982611ac2565b604082019050919050565b60006020820190508181036000830152611b4d81611b11565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611bb0602383611353565b9150611bbb82611b54565b604082019050919050565b60006020820190508181036000830152611bdf81611ba3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611c42602683611353565b9150611c4d82611be6565b604082019050919050565b60006020820190508181036000830152611c7181611c35565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611cae601f83611353565b9150611cb982611c78565b602082019050919050565b60006020820190508181036000830152611cdd81611ca1565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611d40602e83611353565b9150611d4b82611ce4565b604082019050919050565b60006020820190508181036000830152611d6f81611d33565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611dd2602b83611353565b9150611ddd82611d76565b604082019050919050565b60006020820190508181036000830152611e0181611dc5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611e997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611e5c565b611ea38683611e5c565b95508019841693508086168417925050509392505050565b6000611ed6611ed1611ecc84611466565b6117b8565b611466565b9050919050565b6000819050919050565b611ef083611ebb565b611f04611efc82611edd565b848454611e69565b825550505050565b600090565b611f19611f0c565b611f24818484611ee7565b505050565b5b81811015611f4857611f3d600082611f11565b600181019050611f2a565b5050565b601f821115611f8d57611f5e81611e37565b611f6784611e4c565b81016020851015611f76578190505b611f8a611f8285611e4c565b830182611f29565b50505b505050565b600082821c905092915050565b6000611fb060001984600802611f92565b1980831691505092915050565b6000611fc98383611f9f565b9150826002028217905092915050565b611fe282611348565b67ffffffffffffffff811115611ffb57611ffa611e08565b5b612005825461168c565b612010828285611f4c565b600060209050601f8311600181146120435760008415612031578287015190505b61203b8582611fbd565b8655506120a3565b601f19841661205186611e37565b60005b8281101561207957848901518255600182019150602085019450602081019050612054565b868310156120965784890151612092601f891682611f9f565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220791f7a475064e2e44fff501b25ad362deb4ca85c7088576317cd1d783252afce64736f6c634300080f0033";

type SwimUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwimUSDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwimUSD__factory extends ContractFactory {
  constructor(...args: SwimUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwimUSD> {
    return super.deploy(overrides || {}) as Promise<SwimUSD>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwimUSD {
    return super.attach(address) as SwimUSD;
  }
  override connect(signer: Signer): SwimUSD__factory {
    return super.connect(signer) as SwimUSD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwimUSDInterface {
    return new utils.Interface(_abi) as SwimUSDInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwimUSD {
    return new Contract(address, _abi, signerOrProvider) as SwimUSD;
  }
}
