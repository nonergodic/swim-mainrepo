name: "Verify UI build"
on:
  pull_request:
    paths:
      - "apps/ui/**.ts"
      - "apps/ui/**.tsx"
      - "apps/ui/**.json"
      - "apps/ui/**.scss"
  workflow_call:

jobs:
  verify:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./apps/ui

    env:
      REACT_APP_BNB_MAINNET_RPC_URL: "https://example.com"
      REACT_APP_BNB_TESTNET_RPC_URL: "https://example.com"
      REACT_APP_MORALIS_MAINNET_URL: "https://example.com"
      REACT_APP_MORALIS_TESTNET_URL: "https://example.com"
      REACT_APP_SOLANA_MAINNET_RPC_URL: "https://solana-api.projectserum.com"
      REACT_APP_KARURA_MAINNET_RPC_URL: "https://eth-rpc-karura.aca-api.network"
      REACT_APP_KARURA_MAINNET_SUBQL_URL: "https://karura-evm-subql.aca-api.network"
      REACT_APP_ENABLE_POOL_RESTRUCTURE: "true"
      SKIP_PREFLIGHT_CHECK: true

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Check types
        run: yarn typecheck
      - name: Check lint
        run: yarn lint --max-warnings=0
      - name: Test
        run: yarn test --watchAll=false
      - name: Check format
        run: yarn format:check
      - name: "Create .env file for storybook"
        run: |
          touch .env
          echo REACT_APP_BNB_MAINNET_RPC_URL=$REACT_APP_BNB_MAINNET_RPC_URL >> .env
          echo REACT_APP_MORALIS_MAINNET_URL=$REACT_APP_MORALIS_MAINNET_URL >> .env
          echo REACT_APP_BNB_TESTNET_RPC_URL=$REACT_APP_BNB_TESTNET_RPC_URL >> .env
          echo REACT_APP_MORALIS_TESTNET_URL=$REACT_APP_MORALIS_TESTNET_URL >> .env
          echo REACT_APP_SOLANA_MAINNET_RPC_URL=$REACT_APP_SOLANA_MAINNET_RPC_URL >> .env
          echo REACT_APP_ENABLE_POOL_RESTRUCTURE=true >> .env
          cat .env
      - name: Build Storybook
        run: yarn build-storybook --quiet
      - name: Publish Storybook
        id: publish_storybook
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_SWIM_PAGES_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          npx --yes wrangler@2 pages publish storybook-static --project-name=ui-storybook --branch=${{ github.head_ref || github.ref_name }} | tee wrangler-output.txt
          echo "::set-output name=storybook-deployment::$(grep Deployment wrangler-output.txt)"
      - name: Find storybook comment
        uses: peter-evans/find-comment@v2
        if: ${{ github.event_name == 'pull_request' }}
        id: find-storybook-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: ui-storybook.pages.dev
      - name: Create or update storybook comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.find-storybook-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ steps.publish_storybook.outputs.storybook-deployment }}
          edit-mode: replace
