{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedVm",
          "type": "bytes"
        }
      ],
      "name": "completeTransferWithPayload",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "recipientChain",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "recipient",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "arbiterFee",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        }
      ],
      "name": "transferTokens",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "recipientChain",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "recipient",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "transferTokensWithPayload",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wormhole",
      "outputs": [
        {
          "internalType": "contract IWormhole",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "tokenChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "tokenAddress",
          "type": "bytes32"
        }
      ],
      "name": "wrappedAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb91b2e6846bb3f81c3da26524eb6e7ad7b6cdc8f9082dfaa08403dc584facb0e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "297837",
    "logsBloom": "0x
    "blockHash": "0xdb60a7b458feccf7419c26ba77c9200a8336f2eda13d55278c32189cf99d7949",
    "transactionHash": "0xb91b2e6846bb3f81c3da26524eb6e7ad7b6cdc8f9082dfaa08403dc584facb0e",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "297837",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "62b001b8c55a294546ddda26ced5f212",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"arbiterFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"transferTokensWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"}],\"name\":\"wrappedAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTokenBridge.sol\":\"MockTokenBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStructs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStructs {\\n  struct Provider {\\n    uint16 chainId;\\n    uint16 governanceChainId;\\n    bytes32 governanceContract;\\n  }\\n\\n  struct GuardianSet {\\n    address[] keys;\\n    uint32 expirationTime;\\n  }\\n\\n  struct Signature {\\n    bytes32 r;\\n    bytes32 s;\\n    uint8 v;\\n    uint8 guardianIndex;\\n  }\\n\\n  struct VM {\\n    uint8 version;\\n    uint32 timestamp;\\n    uint32 nonce;\\n    uint16 emitterChainId;\\n    bytes32 emitterAddress;\\n    uint64 sequence;\\n    uint8 consistencyLevel;\\n    bytes payload;\\n    uint32 guardianSetIndex;\\n    Signature[] signatures;\\n    bytes32 hash;\\n  }\\n}\\n\",\"keccak256\":\"0x846e9a3def6a97e1822e1aa36b0698d4cee04ca2a3d7ccf8b32ff8dba8d7c164\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenBridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IWormhole.sol\\\";\\n\\ninterface ITokenBridge {\\n  function transferTokensWithPayload(\\n    address token,\\n    uint256 amount,\\n    uint16 recipientChain,\\n    bytes32 recipient,\\n    uint32 nonce,\\n    bytes memory payload\\n  ) external payable returns (uint64);\\n\\n  function transferTokens(\\n    address token,\\n    uint256 amount,\\n    uint16 recipientChain,\\n    bytes32 recipient,\\n    uint256 arbiterFee,\\n    uint32 nonce\\n  ) external payable returns (uint64 sequence);\\n\\n  function completeTransferWithPayload(bytes memory encodedVm) external returns (bytes memory);\\n\\n  function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) external view returns (address);\\n\\n  function wormhole() external view returns (IWormhole);\\n}\\n\",\"keccak256\":\"0x3e9248a4a3483dad2cab743362d8dab26b1f8dac330e030662476cbed8a90621\",\"license\":\"MIT\"},\"contracts/interfaces/IWormhole.sol\":{\"content\":\"// SPDX-License-Identifier: Apache 2\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IStructs.sol\\\";\\n\\ninterface IWormhole is IStructs {\\n  event LogMessagePublished(\\n    address indexed sender,\\n    uint64 sequence,\\n    uint32 nonce,\\n    bytes payload,\\n    uint8 consistencyLevel\\n  );\\n\\n  function publishMessage(\\n    uint32 nonce,\\n    bytes memory payload,\\n    uint8 consistencyLevel\\n  ) external payable returns (uint64 sequence);\\n\\n  function parseAndVerifyVM(bytes calldata encodedVM)\\n    external\\n    view\\n    returns (\\n      IStructs.VM memory vm,\\n      bool valid,\\n      string memory reason\\n    );\\n\\n  function verifyVM(IStructs.VM memory vm)\\n    external\\n    view\\n    returns (bool valid, string memory reason);\\n\\n  function verifySignatures(\\n    bytes32 hash,\\n    IStructs.Signature[] memory signatures,\\n    IStructs.GuardianSet memory guardianSet\\n  ) external pure returns (bool valid, string memory reason);\\n\\n  function parseVM(bytes memory encodedVM)\\n    external\\n    pure\\n    returns (IStructs.VM memory vm);\\n\\n  function getGuardianSet(uint32 index)\\n    external\\n    view\\n    returns (IStructs.GuardianSet memory);\\n\\n  function getCurrentGuardianSetIndex() external view returns (uint32);\\n\\n  function getGuardianSetExpiry() external view returns (uint32);\\n\\n  function governanceActionIsConsumed(bytes32 hash)\\n    external\\n    view\\n    returns (bool);\\n\\n  function isInitialized(address impl) external view returns (bool);\\n\\n  function chainId() external view returns (uint16);\\n\\n  function governanceChainId() external view returns (uint16);\\n\\n  function governanceContract() external view returns (bytes32);\\n\\n  function messageFee() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xad270f1a1269b294f955676a063e7a9679c1e54222febe1f551411666fd05c3f\",\"license\":\"Apache 2\"},\"contracts/mocks/MockTokenBridge.sol\":{\"content\":\"// SPDX-License-Identifier: TODO\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/ITokenBridge.sol\\\";\\n\\ncontract MockTokenBridge is ITokenBridge {\\n\\n   function transferTokensWithPayload(\\n    address token,\\n    uint256 amount,\\n    uint16 recipientChain,\\n    bytes32 recipient,\\n    uint32 nonce,\\n    bytes memory payload\\n  ) public payable returns (uint64) {\\n    return 100;\\n  }\\n\\n  function transferTokens(\\n    address token,\\n    uint256 amount,\\n    uint16 recipientChain,\\n    bytes32 recipient,\\n    uint256 arbiterFee,\\n    uint32 nonce\\n  ) external payable returns (uint64 sequence) {\\n    return 64;\\n  }\\n\\n  function completeTransferWithPayload(bytes memory encodedVm) external returns (bytes memory) {\\n    return hex\\\"01020304\\\";\\n  }\\n\\n  function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) external view returns (address) {\\n    return 0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199;\\n  }\\n\\n  function wormhole() external view returns (IWormhole) {\\n    address a = address(0xC89Ce4735882C9F0f0FE26686c53074E09B0D550);\\n    IWormhole _wormhole = IWormhole(a);\\n    return _wormhole;\\n  }\\n\\n}\\n\",\"keccak256\":\"0x5ec7f2bb417561b2704fe386e2210d04cb73e45d81d6636c658241a1d0314b6e\",\"license\":\"TODO\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610470806100206000396000f3fe60806040526004361061005a5760003560e01c806384acd1bb1161004357806384acd1bb146100f2578063c3f511c114610119578063c5a5ebda1461017957600080fd5b80630f5287b01461005f5780631ff1e28614610097575b600080fd5b61007961006d3660046101e2565b60409695505050505050565b60405167ffffffffffffffff90911681526020015b60405180910390f35b3480156100a357600080fd5b506100cd6100b2366004610241565b738626f6940e2eb28930efb4cef49b2d1f2c9c119992915050565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008e565b3480156100fe57600080fd5b5073c89ce4735882c9f0f0fe26686c53074e09b0d5506100cd565b34801561012557600080fd5b5061016c610134366004610327565b5060408051808201909152600481527f0102030400000000000000000000000000000000000000000000000000000000602082015290565b60405161008e9190610364565b6100796101873660046103b9565b60649695505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146101b757600080fd5b919050565b803561ffff811681146101b757600080fd5b803563ffffffff811681146101b757600080fd5b60008060008060008060c087890312156101fb57600080fd5b61020487610193565b955060208701359450610219604088016101bc565b9350606087013592506080870135915061023560a088016101ce565b90509295509295509295565b6000806040838503121561025457600080fd5b61025d836101bc565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126102ab57600080fd5b813567ffffffffffffffff808211156102c6576102c661026b565b604051601f8301601f19908116603f011681019082821181831017156102ee576102ee61026b565b8160405283815286602085880101111561030757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561033957600080fd5b813567ffffffffffffffff81111561035057600080fd5b61035c8482850161029a565b949350505050565b600060208083528351808285015260005b8181101561039157858101830151858201604001528201610375565b818111156103a3576000604083870101525b50601f01601f1916929092016040019392505050565b60008060008060008060c087890312156103d257600080fd5b6103db87610193565b9550602087013594506103f0604088016101bc565b935060608701359250610405608088016101ce565b915060a087013567ffffffffffffffff81111561042157600080fd5b61042d89828a0161029a565b915050929550929550929556fea264697066735822122080cd52e77e5b18512fcf8cd2167b9c502a5f26569f11e7e8f7c217c7562ebe2364736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061005a5760003560e01c806384acd1bb1161004357806384acd1bb146100f2578063c3f511c114610119578063c5a5ebda1461017957600080fd5b80630f5287b01461005f5780631ff1e28614610097575b600080fd5b61007961006d3660046101e2565b60409695505050505050565b60405167ffffffffffffffff90911681526020015b60405180910390f35b3480156100a357600080fd5b506100cd6100b2366004610241565b738626f6940e2eb28930efb4cef49b2d1f2c9c119992915050565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008e565b3480156100fe57600080fd5b5073c89ce4735882c9f0f0fe26686c53074e09b0d5506100cd565b34801561012557600080fd5b5061016c610134366004610327565b5060408051808201909152600481527f0102030400000000000000000000000000000000000000000000000000000000602082015290565b60405161008e9190610364565b6100796101873660046103b9565b60649695505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146101b757600080fd5b919050565b803561ffff811681146101b757600080fd5b803563ffffffff811681146101b757600080fd5b60008060008060008060c087890312156101fb57600080fd5b61020487610193565b955060208701359450610219604088016101bc565b9350606087013592506080870135915061023560a088016101ce565b90509295509295509295565b6000806040838503121561025457600080fd5b61025d836101bc565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126102ab57600080fd5b813567ffffffffffffffff808211156102c6576102c661026b565b604051601f8301601f19908116603f011681019082821181831017156102ee576102ee61026b565b8160405283815286602085880101111561030757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561033957600080fd5b813567ffffffffffffffff81111561035057600080fd5b61035c8482850161029a565b949350505050565b600060208083528351808285015260005b8181101561039157858101830151858201604001528201610375565b818111156103a3576000604083870101525b50601f01601f1916929092016040019392505050565b60008060008060008060c087890312156103d257600080fd5b6103db87610193565b9550602087013594506103f0604088016101bc565b935060608701359250610405608088016101ce565b915060a087013567ffffffffffffffff81111561042157600080fd5b61042d89828a0161029a565b915050929550929550929556fea264697066735822122080cd52e77e5b18512fcf8cd2167b9c502a5f26569f11e7e8f7c217c7562ebe2364736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}